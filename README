Facebook Graph API
==================

Currently this is an alpha version of an easy to use implementation of the FB 
Graph API.

It is currently working with CakePHP as a component, please see the source files 
in cake/components/

To use it with cake, just move the files in cake/components/ to 
$app_dir/controllers/components/ and include it like any other CakePHP component.

It is written to be fairly stand alone and it has it's own basic Http client in 
the http_request.php file. This means it will be easy to port to any other 
framework you may be using.

As a note of warning, the HTTP client currently assumes that all data is 
returned error-free. This is listed as a todo in the source.

API Conventions
===============

I would like to implement this as simply as possible, so I want it to follow 
conventions as much as possible.

In the Graph API each Facebook entity is represented as a node in the social 
graph, we will call these objects. Each object has a relationship to other
objects, these all called connection types or relationships.

Objects can be requested and introspection is possible too (i.e: you can ask FB 
what types of relationships it has to other objects. Since the protocol follows 
an oAuth REST model, we can interact with objects using HTTP verbs: GET, POST, 
and DELETE.

In keeping with this, all methods will be named with the following scheme:
	- verb_relationship(object_id)
Except when the relationship is self then you will be able to access the object:
	- verb_object(object_id)

Current Implementation
======================

  set_redirect_uri
  ----------------
  Sets the URI that face will redirect the user to after authentication
 
  auth_redirect
  -------------
  Redirects the user to the autication page if necessary.
  You can set the permissions you would like by passing in an array of permissions:
      auth_redirect( array( 'publish_stream', 'create_event', 'rsvp_event' ) );
  See <http://developers.facebook.com/docs/authentication/permissions>
  for a full list of permissions.
 
  get_token
  ---------
  After authentication is requested this function will return true if 
  the access token was retreived successfully. The access token is stored
  in $this->token.
 
  get_object
  ----------
  Requests an object's basic info from the FB social graph. Returns data
  as a hash with keys that match the expected values as specified at:
  <http://developers.facebook.com/docs/api>
 
  delete_object
  -------------
  Deletes an object's from the FB social graph if you have permissions.
  <http://developers.facebook.com/docs/api>
 
  get_connection_types
  --------------------
  Requests an object's connection types to the FB social graph. Returns
  a hash of connection types as keys and links to the respective api
  calls.
  <http://developers.facebook.com/docs/api>
 
  get_connections
  ---------------
  Requests an object's connections to other objects on the FB graph.
  $relation can be: any of: (friends, home, feed (Wall), likes, 
  movies, books, notes, photos, videos, events, groups).
  However, call get_connection_types to get a real list of connection
  an object supports.
  <http://developers.facebook.com/docs/api>
 
  post_feed
  ---------
  Posts a message to $profile_id's feed and returns the message id.
  This is basically a way to post to a user's wall, But can be used to
  post to pages or events.
 
  Message parameters: message, picture, link, name, description
 
  <http://developers.facebook.com/docs/api>
 
  post_like
  ---------
  Likes a post.
 
  Message parameters: none
 
  <http://developers.facebook.com/docs/api>
 
  post_comment
  ------------
  Posts a comment to $post_id and returns the comment id.
 
  Message parameters: message
 
  post_note
  ---------
  Posts a note to $profile_id's feed and returns the note id.
  Message parameters: subject, message (an HTML string)
 
  post_link
  ---------
  Posts a link to $profile_id and returns the link id.
  Message parameters: link, message
